<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Testing on Jovche Mitrejchevski</title>
    <link>https://jovmit.io/tags/testing/</link>
    <description>Recent content in Testing on Jovche Mitrejchevski</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Dec 2019 09:11:33 +0100</lastBuildDate><atom:link href="https://jovmit.io/tags/testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Setting up Koin for Android UI testing</title>
      <link>https://jovmit.io/posts/koin-setup-android/</link>
      <pubDate>Sat, 14 Dec 2019 09:11:33 +0100</pubDate>
      
      <guid>https://jovmit.io/posts/koin-setup-android/</guid>
      <description>Problem definition Recently I&amp;rsquo;ve come to a problem running my UI tests because of a DefinitionOverrideException. That&amp;rsquo;s an exception thrown by the Koin library when we have a duplicated definition for a particular type. The way we use Koin on Android is by starting the container in the onCreate() method of the Application class and loading the relevant modules into the container. Here is how it may look like:</description>
    </item>
    
    <item>
      <title>Testing Android UI with pleasure</title>
      <link>https://jovmit.io/posts/android-testing-ui/</link>
      <pubDate>Sun, 28 Jan 2018 07:19:48 +0200</pubDate>
      
      <guid>https://jovmit.io/posts/android-testing-ui/</guid>
      <description>Intro Although it should be very clear by now, testing is a very important part of the software development. Tests are, in a way, a construction around the software, which provides confidence for altering its structure (mostly to improve it) while being sure the behaviour stays the same.
This article is focused mainly on the UI tests in an Android application. Traditionally, testing the UI was done by running a mocked backend on the same machine where the device/emulator is exercising the UI tests.</description>
    </item>
    
  </channel>
</rss>
